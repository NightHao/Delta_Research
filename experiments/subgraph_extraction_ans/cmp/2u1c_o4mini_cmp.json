{
    "What is the difference between Data SAP and Data link control SAP?": "A Service Access Point (SAP) is simply a named interface through which one layer of the protocol stack offers services to the layer immediately above it.  In the Data Link layer of the EV/PLC (e.g. HomePlug Green PHY/G3-PLC) stack you actually get two distinct SAPs: one for carrying user data (the \u201cData SAP\u201d) and one for carrying link-management and control information (the \u201cData Link Control SAP\u201d).  Here is how they differ:\n\n1. Purpose and Functionality  \n   \u2022 Data SAP  \n     \u2013 Carries user-payload frames (Ethernet-II or other data packets) between Layer 3 (Network) and the Data Link layer.  \n     \u2013 Primitives include things like DATA-LINK-SEND.request / DATA-LINK-SEND.confirm and DATA-LINK-RECEIVE.indication.  \n     \u2013 Identified in HomePlug Green PHY as the \u201cETH SAP\u201d when converging Ethernet traffic over PLC.  \n   \u2022 Data Link Control SAP  \n     \u2013 Carries link-status, error indications, flow-control commands, matching/initialization messages, etc.  \n     \u2013 Primitives include D-LINK_READY.indication(link-established or no-link), D-LINK_ERROR.request, etc.  \n     \u2013 Provides the higher layers (e.g. the SLAC matching/validation logic or network-layer control protocols) with up-to-date information on whether the PLC link is up, what errors have occurred, and when to retry or tear down the link.\n\n2. Who Provides Them  \n   \u2022 Data SAP  \n     \u2013 Exposed by the convergence layer or the MAC sublayer as the point through which ordinary data frames are injected into or extracted from the lower-layer communication technology.  \n   \u2022 Data Link Control SAP  \n     \u2013 Provided by the Connection Coordination Entity (the module that actually manages the life-cycle of the PLC link), because it needs to mediate matching, initialization and error-recovery operations.\n\n3. Relationship to Layers  \n   \u2022 Both SAPs sit \u201cabove\u201d the MAC sublayer and \u201cbelow\u201d the Network layer (Layer 3).  But:  \n     \u2013 Data SAP is the \u201cdata-plane\u201d interface: it carries user traffic.  \n     \u2013 Data Link Control SAP is the \u201ccontrol-plane\u201d interface: it carries link management messages and status indications.\n\n4. Primitive Examples  \n   \u2022 Over the Data SAP (ETH SAP):  \n     \u2013 DATA-LINK-SEND.request(data-PDU) \u2192 lower layers will attempt transmission  \n     \u2013 DATA-LINK-SEND.confirm(success/failure) \u2192 informs Network layer of the outcome  \n     \u2013 DATA-LINK-RECEIVE.indication(new-data-PDU) \u2192 notifies Network layer of incoming payload  \n   \u2022 Over the Data Link Control SAP:  \n     \u2013 D-LINK_READY.indication(link-established) \u2192 tells higher layers they may start using the link  \n     \u2013 D-LINK_READY.indication(no-link) \u2192 tells higher layers the link has been lost  \n     \u2013 D-LINK_ERROR.request \u2192 instructs the lower layers to abort/re-initiate the link-setup process  \n\nIn short, whenever you want to move *user data* (IP packets, TCI frames, etc.) you go out over the Data SAP; whenever you want to manage or monitor the health of the underlying PLC link (bring it up, tear it down, detect errors, flow-control it, match EV to EVSE, etc.) you go out over the Data Link Control SAP.",
    "What is the difference between basic signaling and high-level communication?": "Basic signaling and high-level communication (HLC) both sit in an EV-to-EVSE communication system, but they serve very different roles and use very different technologies:\n\n1. Basic signaling  \n  \u2022 Defined by IEC 61851-1 (often called \u201cIEC-1\u201d) and referenced in ISO 15118-3.  \n  \u2022 Uses the single control-pilot conductor and simple PWM duty-cycles (5\u2009%\u201396\u2009%) plus discrete pilot states (A, B, C, D, X1, X2, etc.) to convey only the most fundamental information:  \n    \u2013 \u201cVehicle present / ready to receive current\u201d  \n    \u2013 \u201cAvailable maximum current\u201d (via duty cycle)  \n    \u2013 \u201cStart / stop charging\u201d  \n  \u2022 Analog / on-off in nature, unidirectional or very limited bidirectional (e.g. counting B-C-B toggles for validation).  \n  \u2022 Always available and must be supported by every Mode 3/Mode 4 charger; used as a fallback (\u201cbasic charging mode\u201d) if HLC-C fails.  \n  \u2022 No ability to carry richer data (metered values, dynamic grid constraints, identification keys, schedules, etc.).\n\n2. High-Level Communication (HLC)  \n  \u2022 Defined in ISO 15118-3 and related V2G standards (e.g. V2G3-M06-02, V2G3-M06-14).  \n  \u2022 Runs on top of basic signaling by embedding a PLC (HomePlug Green PHY or G3-PLC) modem in both EV and EVSE.  \n  \u2022 Supports a full message-based protocol stack (HLC-C mode) for bidirectional data exchange:  \n    \u2013 Vehicle and EVSE identification and authorization (EIM, Plug & Charge, ISO-2 message sets)  \n    \u2013 Dynamic grid information, pricing, charging profiles, state-of-charge updates  \n    \u2013 V2G services (bidirectional energy flow, smart charging/discharging schedules)  \n    \u2013 Sleep-mode negotiation, firmware updates, diagnostics  \n  \u2022 Messages include SLAC matching (CM_SLAC_*), attenuation characterization (CM_ATTEN_CHAR.*), validation (CM_VALIDATE.REQ/CNF), amplitude map exchange (CM_AMP_MAP.REQ), etc.  \n  \u2022 Without basic signalling you cannot establish or maintain the safety-critical pilot; HLC simply rides in parallel to provide all the \u201cintelligence.\u201d\n\nIn short:  \n  \u2013 Basic signaling is a low-level, single-wire pilot-line scheme for rudimentary charging control (current limits, connection state).  \n  \u2013 High-level communication is a full digital, bidirectional protocol (typically over PLC) that enables advanced features: secure identification, dynamic grid management, V2G, Plug & Charge, diagnostics and more.",
    "What is the difference between MTC and PTC?": "The two components sit at different levels of the test architecture and have very different responsibilities:\n\n1. Role and Scope  \n  \u2013 Main Test Component (MTC)  \n   \u2022 Acts as the *test executive* or \u201ctest controller.\u201d  \n   \u2022 Implements the TTCN-3 test configuration, orchestrates test steps, sends and receives protocol messages (SLAC, CmValidate, CmSlacMatch, CmAmpMap, PLCLinkStatus, etc.), computes verdicts.  \n   \u2022 Can be either an EVCC_Tester (when the System Under Test is an EVCC) or a SECC_Tester (when SUT is a SECC).  \n   \u2022 Drives the high-level conformance testing of the communication controller under test (protocol, data-link layer, SLAC, ISO 15118-3 behaviors).  \n\n  \u2013 Parallel Test Component (PTC)  \n   \u2022 Runs *in parallel* to the MTC but is subordinate to it.  \n   \u2022 Is purely a physical-layer/IEC 61851-1 pilot-signal monitor&stimulus entity.  \n   \u2022 Continuously observes and manipulates the control-pilot PWM signal (duty-cycle, frequency, voltage states) and the EIM authorization status.  \n   \u2022 Confirms physical state changes (e.g. State B transitions, valid duty-cycle range, frequency range) and reports success/failure of EIM authorization back to the MTC.  \n\n2. Ports and Interfaces  \n  \u2013 MTC  \n   \u2022 Maps and uses ports like pt_SLAC_Port (for SLAC message exchange), pt_HAL_61851_Port (to drive the control-pilot line), pt_HAL_61851_Internal_Port (to read analog pilot-line state), etc.  \n   \u2022 Controls low-layer data-link processing (power-line communication link status, attenuation-characterization procedures) through those ports.  \n\n  \u2013 PTC  \n   \u2022 Has its own pt_HAL_61851_Internal_Port (and possibly HAL_61851_Listener_Port) mapped to the same physical pilot line, but uses it only to *observe* or *stimulate* PWM states in lock-step with the MTC\u2019s test script.  \n   \u2022 Does not run the TTCN-3 test configuration itself\u2014its sole purpose is to monitor or change the physical control-pilot signal in accordance with IEC 61851-1.  \n\n3. Responsibilities  \n  \u2013 MTC  \n   \u2022 Sequences protocol exchanges (e.g. CM_VALIDATE_REQ/CNF, CM_SLAC_PARM_REQ/CNF, CM_SLAC_MATCH_REQ/CNF).  \n   \u2022 Triggers attenuation-characterization GoodCase procedures, calculates average attenuation, manages timers (e.g. TT_match_sequence, TP_EVSE_avg_atten_calc).  \n   \u2022 Aggregates verdicts for conformance.  \n\n  \u2013 PTC  \n   \u2022 Implements the IEC 61851-1 Pilot Test Controller functions (V2G5-027 to V2G5-030): change PWM state condition, adjust valid duty-cycle and frequency ranges, process incoming EIM status (V2G5-034), inform MTC of EIM-authorization outcome.  \n   \u2022 Exercises the physical interface: toggles PWM states, measures voltages, confirms the EVSE/EV reaction on the pilot line.  \n\n4. Hierarchy and Interaction  \n  \u2013 The MTC *creates* or *spawns* the PTC as a parallel actor when a test scenario requires physical-layer stimulus or monitoring.  \n  \u2013 The PTC runs throughout the test case to watch for EIM or PWM-state events, and it calls back into the MTC to signal success/failure when those events occur.  \n  \u2013 At no point does the PTC itself drive protocol-level messages\u2014those always originate from the MTC.  \n\nIn short:  \n  \u2022 The Main Test Component is your *TTCN-3 test controller* for upper-layer protocol conformance (SECC/EVCC behavior, SLAC, PLC link, ISO 15118-3).  \n  \u2022 The Parallel Test Component is your *physical-layer pilot-signal controller*, continuously observing or manipulating the IEC 61851-1 control-pilot PWM and EIM status in parallel to the MTC\u2019s protocol tests."
}